<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd  http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd">
	<configuration-properties doc:name="Configuration properties" doc:id="ad0dea58-59c3-4c39-962b-da67a90c675e" file="config.example.yaml" />
    <http:listener-config name="secure-properties-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8082">
		</http:listener-connection>
    </http:listener-config>
    <apikit:config name="secure-properties-api-config" api="api/secure-properties-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <file:config name="File_Config" doc:name="File Config" doc:id="17a4b774-2a13-4ac3-be1c-22f25c0ea68e" >
		<file:connection workingDir="${mule.home}" />
	</file:config>
	<flow name="secure-properties-api-main">
        <http:listener config-ref="secure-properties-api-httpListenerConfig" path="${http.path}">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="secure-properties-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="d6208fc2-9e79-4751-a02a-287399641907" type="APP:ENCRYPT_ERROR">
				<ee:transform doc:name="Transform Message" doc:id="c187fecd-7a40-4d7f-9b2d-1ac3ca95489c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: error.description
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[422]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="2a71dd3c-5245-4f47-9e0a-3f1bf490869b" type="APP:DECRYPT_NOT_AUTHORIZED">
				<ee:transform doc:name="Transform Message" doc:id="97a0592f-a8b4-4471-8c85-a92361fc1b81" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Decryption of secure properties is not enabled."
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[422]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
        </error-handler>
    </flow>
    <flow name="secure-properties-api-console">
        <http:listener config-ref="secure-properties-api-httpListenerConfig" path="${http.console}">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="secure-properties-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\configuration:secure-properties-api-config" doc:id="ea52ab82-8a96-4de0-bda5-f56318f0802f" >
		<logger level="INFO" doc:name="Logger" doc:id="83d82695-b70c-49c4-9deb-0f0aae6eaf21" message="get:\configuration:secure-properties-api-config" />
		<ee:transform doc:name="Transform Message" doc:id="96245f73-2da3-4e1b-be34-f2adc518c376" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import toBoolean from dw::util::Coercions
output application/json
---
{
	defaultAlgorithm: Mule::p("configuration.default.algorithm") default "AES",
	defaultMode: Mule::p("configuration.default.mode") default "CBC",
	encryptionKeyFromUser: isEmpty(Mule::p("configuration.encryptionKey")) default true,
	allowDecryption: toBoolean(Mule::p("configuration.allowDecryption"))
					 default if (isEmpty(Mule::p("configuration.encryptionKey"))) true else false
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="post:\file-level:multipart\form-data:secure-properties-api-config">
    	<logger level="INFO" message="post:\file-level:multipart\form-data:secure-properties-api-config" />
		<set-variable value="#[output application/java --- payload.parts.inputFile.headers.'Content-Type']" doc:name="contentType" doc:id="cc09c987-519b-43a2-9f40-f27f9875948e" variableName="contentType"/>
		<try doc:name="Try" doc:id="5a059cd9-8bd5-4335-b8d1-848c5c7fbb4c" >
			<validation:is-true doc:name="Is true" doc:id="5f2acb67-f0e2-41bf-95f7-e9ca03f3bb66" expression="#[vars.contentType == 'application/x-yaml' or vars.contentType == 'text/yaml']"/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="4a63cde3-22d2-4c1d-b911-7aa17e5d09e0" >
					<raise-error doc:name="Raise error" doc:id="3e862e37-7cf0-4aac-bc9a-87ea39b30db4" type="APP:FILE_TYPE" description="Wrong input file type. File must be in *.yaml format."/>
				</on-error-propagate>
			</error-handler>
		</try>
		<flow-ref doc:name="Prepare encryption" doc:id="db458856-ff90-4789-9bc7-0357cad1facd" name="secure-config-properties-prepare-encryption" />
				<set-variable value="#[output application/java --- payload.parts.outputFile.content]" doc:name="outputFile" doc:id="dfed26cd-f445-434d-a188-684291f546af" variableName="outputFile" />
				<file:write doc:name="Write" doc:id="b52120c7-f225-4bf7-af46-934d066c6803" config-ref="File_Config" path="#[p('app.home') ++ &quot;/file.yaml&quot;]">
			<file:content><![CDATA[#[payload.parts.inputFile.content]]]></file:content>
		</file:write>
				<java:new doc:name="New" doc:id="076629d4-d44b-438d-863e-58e9d847120f" class="com.dejim.SecurePropertiesWrapper" constructor="SecurePropertiesWrapper()" />
				<java:invoke doc:name="Invoke" doc:id="03ae584f-ea47-4dee-a011-3866ddc3e3a3" instance="#[payload]" class="com.dejim.SecurePropertiesWrapper" method="secureFileLevel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
			<java:args><![CDATA[#[output application/java
---
{
	arg0: p('app.home'),
	arg1: vars.operation,
	arg2: vars.algorithm,
	arg3: vars.mode,
	arg4: vars.key,
	arg5: p('app.home') ++ "/file.yaml",
	arg6: vars.outputFile
}]]]></java:args>
		</java:invoke>
		<try doc:name="Try" doc:id="22777d68-3916-47c3-8e1b-2fb1a590477f" >
			<validation:is-false doc:name="Is false" doc:id="8abdf8c7-3424-439c-934e-9d13816dbc47" expression='#[payload startsWith("Invalid")]'/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="5a8d98de-383a-4a50-9f25-790b99866aa0" >
					<raise-error doc:name="Raise error" doc:id="ab634444-658e-4a24-97cc-6905e7cb0dee" type="APP:ENCRYPT_ERROR" description='#["Error encrypting file: " ++ payload]'/>
				</on-error-propagate>
			</error-handler>
		</try>
				<set-variable value='#[%dw 2.0
import * from dw::core::Binaries
output application/java
---
(vars.outboundHeaders default {}) ++ {"Content-Disposition":"attachment; filename=" ++ vars.outputFile, "Content-Type":"application/octet-stream"}]' doc:name="Set Variable" doc:id="c52ee2ab-ae58-4164-b2a1-3408b4728545" variableName="outboundHeaders" />
				<file:read doc:name="Read" doc:id="f54d8d6a-29a2-4cb9-ae23-671dfe88ec1b" path="#[p('app.home') ++ &quot;/&quot; ++ vars.outputFile]" outputMimeType="application/octet-stream" />
			
    </flow>
    <flow name="post:\file:multipart\form-data:secure-properties-api-config">
        <logger level="INFO" message="post:\file:multipart\form-data:secure-properties-api-config" />
		<set-variable value="#[output application/java --- payload.parts.inputFile.headers.'Content-Type']" doc:name="contentType" doc:id="9ba08efa-b4b0-4d59-b796-3daefb137982" variableName="contentType"/>
		<try doc:name="Try" doc:id="595b1142-6da2-4f4e-a134-91be17d51281" >
			<validation:is-true doc:name="Is true" doc:id="95fdf990-ddcd-4deb-8047-a95bf5db34bd" expression="#[vars.contentType == 'application/x-yaml' or vars.contentType == 'text/yaml']"/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="5b277253-38ab-4369-a10e-f8d68b0ddcd2" >
					<raise-error doc:name="Raise error" doc:id="11851a31-7f19-4506-9b4b-d23339d3f96a" type="APP:ENCRYPT_ERROR" description="Wrong input file type. File must be in *.yaml format."/>
				</on-error-propagate>
			</error-handler>
		</try>
        <flow-ref doc:name="Prepare encryption" doc:id="bddbb396-3f4d-475e-93ae-a6f54bea5d00" name="secure-config-properties-prepare-encryption" />
        <set-variable value="#[output application/java --- payload.parts.outputFile.content]" doc:name="outputFile" doc:id="ac653e78-4ce0-4196-b02b-91abb0bdc414" variableName="outputFile" />
		<file:write doc:name="Write" doc:id="f73c2fb6-c040-4569-a44b-1885c5079a9d" config-ref="File_Config" path="#[p('app.home') ++ &quot;/file.yaml&quot;]" >
			<file:content ><![CDATA[#[payload.parts.inputFile.content]]]></file:content>
		</file:write>
		<java:new doc:name="New" doc:id="becd6d44-9ad4-4711-95e6-8f8ba7945c91" class="com.dejim.SecurePropertiesWrapper" constructor="SecurePropertiesWrapper()"/>
		<java:invoke doc:name="Invoke" doc:id="ee6772ed-aeb4-4ee9-a392-b42d5723cb88" instance="#[payload]" class="com.dejim.SecurePropertiesWrapper" method="secureFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
			<java:args ><![CDATA[#[output application/java
---
{
	arg0: p('app.home'),
	arg1: vars.operation,
	arg2: vars.algorithm,
	arg3: vars.mode,
	arg4: vars.key,
	arg5: p('app.home') ++ "/file.yaml",
	arg6: vars.outputFile
}]]]></java:args>
		</java:invoke>
		<try doc:name="Try" doc:id="4860aa6b-90e4-433c-86f9-63c758da268b" >
			<validation:is-false doc:name="Is false" doc:id="9bd3790a-638e-482e-8471-e0b6109b659b" expression='#[payload startsWith("Invalid")]'/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="cbfbdc77-f7cd-481a-a785-c6fbb22ed998" >
					<raise-error doc:name="Raise error" doc:id="9284bef3-6f53-4109-bfa3-7b763389c27f" type="APP:ENCRYPT_ERROR" description='#["Error encrypting file: " ++ payload]'/>
				</on-error-propagate>
			</error-handler>
		</try>
		<set-variable value='#[%dw 2.0
import * from dw::core::Binaries
output application/java
---
(vars.outboundHeaders default {}) ++ {"Content-Disposition":"attachment; filename=" ++ vars.outputFile, "Content-Type":"application/octet-stream"}]' doc:name="Set Variable" doc:id="6be5b7b6-ba85-45f5-b3bf-530a8dc85eae" variableName="outboundHeaders" />
		<file:read doc:name="Read" doc:id="448940e0-451e-4737-8d94-8d62194d3038" path="#[p('app.home') ++ &quot;/&quot; ++ vars.outputFile]" outputMimeType="application/octet-stream"/>
         
    </flow>
    <flow name="post:\string:multipart\form-data:secure-properties-api-config">
        <logger level="INFO" doc:name="Logger" doc:id="e74daed2-148c-4e2b-8cb8-4ee5dcd47071" message="post:\string:multipart\form-data:secure-properties-api-config"/>
        <flow-ref doc:name="Prepare encryption" doc:id="7abe11ec-c871-44b3-9457-172f9344188d" name="secure-config-properties-prepare-encryption"/>
		<set-variable value="#[output application/java --- payload.parts.value.content]" doc:name="value" doc:id="acf2bf95-8c1d-4db8-b114-b7ffaa1f6b2d" variableName="value" />
		<java:new doc:name="New" doc:id="4462a417-6a11-4b66-993f-a0435c734d3b" class="com.dejim.SecurePropertiesWrapper" constructor="SecurePropertiesWrapper()" />
        <java:invoke doc:name="Invoke" doc:id="99b0131d-d336-4102-8778-7fbf8b16991c" instance="#[payload]" class="com.dejim.SecurePropertiesWrapper" method="secureString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
            <java:args><![CDATA[#[output application/java
---
{
	arg0: p('app.home'),
	arg1: vars.operation,
	arg2: vars.algorithm,
	arg3: vars.mode,
	arg4: vars.key as String,
	arg5: vars.value
}]]]></java:args>
        </java:invoke>
        <try doc:name="Try" doc:id="6a4f7569-d21a-4a27-86da-49bc10a8267d" >
			<validation:is-false doc:name="Is false" doc:id="a233c39e-29a1-4a1f-b161-9020f86ec205" expression='#[payload startsWith("Invalid")]'/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="614b03d4-ac49-4eda-9fec-09c6f69779f3" >
					<raise-error doc:name="Raise error" doc:id="f0c52349-97f0-4a0e-b1ce-0d1aa98833c6" type="APP:ENCRYPT_ERROR" description='#["Error encrypting file: " ++ payload]'/>
				</on-error-propagate>
			</error-handler>
		</try>
        <ee:transform doc:name="Transform Message" doc:id="81201ada-6ff2-488d-afe1-29cbb25612f7">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	property: payload
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <sub-flow name="secure-config-properties-prepare-encryption" doc:id="2614bc68-2a33-4dca-b782-416a1fc7670a" >
		<validation:any doc:name="Any" doc:id="d10adadd-c3be-49d1-911e-51f495b550fb">
			<error-mapping sourceType="VALIDATION:MULTIPLE" targetType="APP:DECRYPT_NOT_AUTHORIZED" />
			<validation:is-true doc:name="Decryption enabled" doc:id="1206439c-897c-4dc6-8f5d-387d26c6e9bb" expression='#[(dw::util::Coercions::toBoolean(Mule::p("configuration.allowDecryption")) default true) == true]' message="Decryption is not enabled."/>
			<validation:is-true doc:name="Decryption disabled but requested" doc:id="437d06fd-a90e-4697-8f38-e70b72640753" expression='#[((dw::util::Coercions::toBoolean(Mule::p("configuration.allowDecryption")) default true) == false) and payload.parts.operation.content != "decrypt"]' message="Decryption is not authorized."/>
		</validation:any>
		<set-variable value="#[output application/java --- payload.parts.operation.content]" doc:name="operation" doc:id="503a6af9-9a72-4881-bf1a-114b8c2eeedb" variableName="operation" />
		<set-variable value="#[output application/java --- payload.parts.algorithm.content]" doc:name="algorithm" doc:id="17b77276-0fe0-4265-9788-17ef2089793d" variableName="algorithm" />
		<set-variable value="#[output application/java --- payload.parts.mode.content]" doc:name="mode" doc:id="2ac2d1c8-f76f-4d29-8bc7-8e0831c1b679" variableName="mode" />
		<set-variable doc:name="key" doc:id="fd424515-e028-4176-8024-684387a731ea" variableName="key" value='#[output application/java&#10;--- &#10;if (isEmpty(Mule::p("configuration.encryptionKey")))&#10;	(payload.parts.key.content replace "%" with "%%") default ""&#10;else&#10;	Mule::p("configuration.encryptionKey")]' />
	</sub-flow>
	<flow name="secure-properties-index" doc:id="1fe26673-f5ac-45d3-8df0-dbfaa46cca94">
        <http:listener doc:name="Listener" doc:id="6fa9aad9-3ef6-4f6c-9e95-ecb18a81d07d" config-ref="secure-properties-api-httpListenerConfig" path="/" />
        <parse-template doc:name="Parse Template" doc:id="af5249f0-e9aa-4877-b482-d08b9b058be9" location="index.html" />
    </flow>
</mule>
